# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VE7opg6QoulWA-wqtkMeYBNrQW4rLnbQ
"""

!pip install folium geopandas pandas requests
import folium
import geopandas as gpd
import pandas as pd
import requests

# Example URL (replace with actual Pacific Palisades fire data)
fire_url = "DINS_2025_Palisades_Public_View.geojson"
fire_data = gpd.read_file(fire_url)

# NOAA example (register for token: https://www.ncdc.noaa.gov/cdo-web/)
NOAA_TOKEN = "svNJtUSkkBUdiXEUXsELOrxkeCPylyKu"
station_id = "GHCND:USW00093134"  # Example LA station

def get_weather(date):
    url = f"https://www.ncdc.noaa.gov/cdo-web/api/v2/data?datasetid=GHCND&stationid={station_id}&startdate={date}&enddate={date}"
    response = requests.get(url, headers={'token': NOAA_TOKEN})
    return response.json()

# Convert GeoDataFrame to GeoJSON format
fire_geojson = fire_data.__geo_interface__

def add_weather_markers_feature(feature):
    # Now, each feature is a dictionary with a 'properties' key
    date = feature['properties']['START_DATE']
    weather = get_weather(date)

    popup_content = f"""
    Weather Conditions:
    - Temp: {weather['data'][0]['temp']}Â°F
    - Humidity: {weather['data'][0]['humidity']}%
    - Wind Speed: {weather['data'][0]['wspd']} mph
    """

    # Extract coordinates from the geometry (assumes Point geometry)
    # If it's not a point, you may need to adjust accordingly.
    lon, lat = feature['geometry']['coordinates']

    folium.Marker(
        location=[lat, lon],
        icon=folium.Icon(icon='cloud'),
        popup=popup_content
    ).add_to(m)

# Iterate over each feature in the GeoJSON
for feature in fire_geojson['features']:
    add_weather_markers_feature(feature)

# Example URL (replace with actual Pacific Palisades fire data)
fire_url = "DINS_2025_Palisades_Public_View.geojson"
fire_data = gpd.read_file(fire_url)

# NOAA example (register for token: https://www.ncdc.noaa.gov/cdo-web/)
NOAA_TOKEN = "svNJtUSkkBUdiXEUXsELOrxkeCPylyKu"
station_id = "GHCND:USW00093134"  # Example LA station

# If you still need weather info, you could modify the get_weather function
# to use another available property. For now, we'll omit it.

# Center map on Pacific Palisades
map_center = [34.0522, -118.5268]  # Approximate coordinates
m = folium.Map(location=map_center, zoom_start=12, tiles='OpenStreetMap')

# Add fire layer with available properties
fire_layer = folium.GeoJson(
    fire_data,
    style_function=lambda x: {'fillColor': '#ff0000', 'color': '#ff0000'},
    tooltip=folium.GeoJsonTooltip(fields=['OBJECTID', 'DAMAGE', 'STRUCTURETYPE']),
    popup=folium.GeoJsonPopup(
        fields=['OBJECTID', 'DAMAGE', 'STRUCTURETYPE'],
        aliases=['Object ID:', 'Damage:', 'Structure Type:'],
        localize=True
    )
).add_to(m)

# If you wish to add markers, use the available properties.
def add_marker_feature(feature):
    # Since there is no START_DATE, we use available info from properties.
    properties = feature.get('properties', {})
    damage = properties.get('DAMAGE', 'N/A')
    structure = properties.get('STRUCTURETYPE', 'N/A')

    # Create a simple popup message
    popup_content = f"""
    Damage: {damage}<br>
    Structure Type: {structure}
    """

    # Extract coordinates from the geometry (assumes Point geometry)
    if feature['geometry']['type'] == 'Point':
        lon, lat = feature['geometry']['coordinates']
        folium.Marker(
            location=[lat, lon],
            icon=folium.Icon(icon='info-sign'),
            popup=popup_content
        ).add_to(m)

# Convert GeoDataFrame to GeoJSON-like dict and add markers
fire_geojson = fire_data.__geo_interface__
for feature in fire_geojson['features']:
    add_marker_feature(feature)

# Display map
m